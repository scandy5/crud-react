{"version":3,"sources":["components/Header/Header.jsx","components/UserRow/UserRow.jsx","components/TableHeaderCell/TableHeaderCell.jsx","components/TableUsers/TableUsers.jsx","components/Footer/Footer.jsx","AppBackend.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","onSelectChange","onSelectSearch","react_default","a","createElement","className","Row","Col","DropdownButton","as","InputGroup","Prepend","variant","title","id","Dropdown","Item","href","onClick","FormControl","aria-describedby","placeholder","Button","UserRow","_React$Component","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","toggleMode","setState","isEditMode","state","inherits","createClass","key","value","_this$props","name","email","description","type","React","Component","TableHeaderCell","order","arrowUpClassName","classNames","table-header-cell__arrow_active","arrowDownClassName","TableUsers","apply","arguments","Table","striped","bordered","hover","TableHeaderCell_TableHeaderCell_TableHeaderCell","users","map","user","index","UserRow_UserRow_UserRow","assign","Footer","getNextPage","getPreviousPage","page","limit","Badge","AppBackend","baseUrl","window","location","hostname","_ref","_ref$page","_ref$search","search","_ref$limit","fetch","concat","then","response","json","method","headers","Accept","Content-Type","body","JSON","stringify","App","asyncToGenerator","regenerator_default","mark","_callee","event","wrap","_context","prev","next","target","innerHTML","updateUsers","stop","_x","_callee2","_context2","_callee3","_context3","onSearchChange","_ref4","_callee4","_context4","_x2","_callee5","_this$state","_context5","backend","get","sent","Container","Header_Header_Header","TableUsers_TableUsers","Footer_Footer_Footer","Boolean","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.380e4087.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Row, Col, DropdownButton, Dropdown, Button, FormControl, InputGroup } from 'react-bootstrap';\r\nimport './Header.css';\r\n\r\n\r\n\r\nexport const Header = (props) => {\r\n\tconst {onSelectChange, onSelectSearch} = props;\r\n\r\n\treturn (\r\n\t\t<header className=\"header\">\r\n\t\t\t<Row>\r\n\t\t\t\t<Col className=\"col-2\">\r\n\t\t\t\t\t<DropdownButton\r\n\t\t\t\t\t\tas={InputGroup.Prepend}\r\n\t\t\t\t\t\tvariant=\"outline-secondary\"\r\n\t\t\t\t\t\ttitle=\"Select limit\"\r\n\t\t\t\t\t\tid=\"input-group-dropdown-1\"\r\n\t\t\t\t\t\tclassName=\"header__limit\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<Dropdown.Item href=\"#\" onClick={onSelectChange}>5</Dropdown.Item>\r\n\t\t\t\t\t\t<Dropdown.Item href=\"#\" onClick={onSelectChange}>10</Dropdown.Item>\r\n\t\t\t\t\t\t<Dropdown.Item href=\"#\" onClick={onSelectChange}>15</Dropdown.Item>\r\n\r\n\t\t\t\t\t</DropdownButton>\r\n\t\t\t\t</Col>\r\n\t\t\t\t<Col>\r\n\t\t\t\t\t<FormControl onClick={onSelectSearch} aria-describedby=\"basic-addon1\" className=\"header__search\" placeholder=\"Search...\" />\r\n\t\t\t\t</Col>\r\n\t\t\t\t<Col className=\"col-2\">\r\n\t\t\t\t\t<Button className=\"header__button\">Add user</Button>\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\t\t</header>\r\n\t)\r\n}","import React from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport './UserRow.css';\r\n\r\n\r\nexport class UserRow extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.state = {\r\n\t\t\tisEditMode: false\r\n\t\t}\r\n\t}\r\n\r\n\ttoggleMode = () => {\r\n\t\tthis.setState({\r\n\t\t\tisEditMode: !this.state.isEditMode\r\n\t\t});\r\n\t};\r\n\r\n\trender() {\r\n\t\tconst { id, name, email, description } = this.props;\r\n\t\tconst { isEditMode } = this.state;\r\n\r\n\t\treturn (\r\n\t\t\t<tr>\r\n\t\t\t\t<td className=\"user-row__cell user-row__cell_id\">{id}</td>\r\n\t\t\t\t<td className=\"user-row__cell user-row__cell_name\">{isEditMode ? <input type=\"text\" value={name} /> : name}</td>\r\n\t\t\t\t<td className=\"user-row__cell user-row__cell_email\">{isEditMode ? <input type=\"text\" value={email} /> : email}</td>\r\n\t\t\t\t<td className=\"user-row__cell user-row__cell_description\">{isEditMode ? <input type=\"text\" value={description} /> : description}</td>\r\n\t\t\t\t<td className=\"user-row__cell user-row__cell_actions\">\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tisEditMode\r\n\t\t\t\t\t\t\t?\r\n\t\t\t\t\t\t\t<div className=\"button-wrapper\">\r\n\t\t\t\t\t\t\t\t<Button variant=\"primary\" className=\"button button_save\" onClick={this.toggleMode}>Save</Button>\r\n\t\t\t\t\t\t\t\t<Button variant=\"success\" className=\"button button_save\" onClick={this.toggleMode}>Cancel</Button>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t:\r\n\t\t\t\t\t\t\t<div className=\"button-wrapper\">\r\n\t\t\t\t\t\t\t\t<Button variant=\"primary\" className=\"button button_edit\" onClick={this.toggleMode}>Edit</Button>\r\n\t\t\t\t\t\t\t\t<Button variant=\"danger\" className=\"button button_delete\">Delete</Button>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t}\r\n\t\t\t\t</td>\r\n\t\t\t</tr>\r\n\t\t)\r\n\t}\r\n}\r\n\r\n","import React from 'react';\r\nimport './TableHeaderCell.css';\r\nimport * as classNames from 'classnames';\r\n\r\nexport const TableHeaderCell = (props) => {\r\n\tconst { order, title } = props;\r\n\r\n\tlet arrowUpClassName = classNames(\r\n\t\t'fas fa-sort-up table-header-cell__arrow', \r\n\t\t{\r\n\t\t\t'table-header-cell__arrow_active': order === 'asc'\r\n\t\t}\r\n\t);\r\n\tlet arrowDownClassName = classNames(\r\n\t\t'fas fa-sort-down table-header-cell__arrow', \r\n\t\t{\r\n\t\t\t'table-header-cell__arrow_active': order === 'desc'\r\n\t\t}\r\n\t);\r\n\r\n\treturn (\r\n\t\t<td>\r\n\t\t\t<div className=\"table-header-cell\">\r\n\t\t\t\t<span className=\"table-header-cell__title\">{title}</span>\r\n\t\t\t\t<div className=\"table-header-cell__arrows\">\r\n\t\t\t\t\t<i className={arrowUpClassName} />\r\n\t\t\t\t\t<i className={arrowDownClassName} />\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</td>\r\n\t)\r\n}","import React from 'react';\r\nimport { Table } from 'react-bootstrap';\r\nimport { UserRow } from '../UserRow/UserRow';\r\nimport { TableHeaderCell } from '../TableHeaderCell/TableHeaderCell';\r\n\r\n\r\nexport class TableUsers extends React.Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<Table striped bordered hover className=\"table\">\r\n\t\t\t\t<thead>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<TableHeaderCell title=\"ID\" order=\"desc\" />\r\n\t\t\t\t\t\t<TableHeaderCell title=\"Name\" />\r\n\t\t\t\t\t\t<TableHeaderCell title=\"Email\" />\r\n\t\t\t\t\t\t<TableHeaderCell title=\"Description\" />\r\n\t\t\t\t\t\t<td>Actions</td>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t</thead>\r\n\t\t\t\t<tbody>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tthis.props.users.map((user, index) => {\r\n\t\t\t\t\t\t\treturn <UserRow {...user} key={user.id} />\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t</tbody>\r\n\t\t\t</Table>\r\n\t\t)\r\n\t}\r\n\r\n}","import React from 'react';\r\nimport { Row, Col, Button, Badge } from 'react-bootstrap';\r\nimport './Footer.css';\r\n\r\nexport const Footer = (props) => {\r\n\tconst { getNextPage, getPreviousPage, page, limit } = props;\r\n\treturn (\r\n\t\t<footer className=\"footer\">\r\n\t\t\t<Row>\r\n\t\t\t\t<Col>\r\n\t\t\t\t\t<Badge variant=\"secondary\" className=\"footer__info\">Shown: {page * limit - limit + 1} - {page * limit} users</Badge>\r\n\t\t\t\t</Col>\r\n\t\t\t\t<Col className=\"col-2\">\r\n\t\t\t\t\t<Button variant=\"success\" className=\"footer__button\" onClick={getPreviousPage}>\r\n\t\t\t\t\t\tPrevious page\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t</Col>\r\n\t\t\t\t<Col className=\"col-2\">\r\n\t\t\t\t\t<Button variant=\"success\" className=\"footer__button\" onClick={getNextPage}>\r\n\t\t\t\t\t\tNext page\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\t\t</footer>\r\n\t)\r\n} ","export class AppBackend {\r\n\tconstructor() {\r\n\t\tthis.baseUrl = 'https://5bf417c491c25b0013a3b9a2.mockapi.io';\r\n\t}\r\n\r\n\tisDevEnvironment() {\r\n\t\treturn window.location.hostname === 'localhost' || window.location.hostname === '127.0.0.1';\r\n\t}\r\n\r\n\tget({ page = 1, search = '', limit = 5 }) {\r\n\t\treturn fetch(`${this.baseUrl}/users?page=${page}&limit=${limit}&search=${search}`)\r\n\t\t\t.then((response) => response.json());\r\n\t}\r\n\r\n\tdelete(id) {\r\n\t\treturn fetch(`${this.baseUrl}/users/${id}`, {\r\n\t\t\tmethod: 'DELETE',\r\n\t\t\theaders: {\r\n\t\t\t\t'Accept': 'application/json',\r\n\t\t\t\t'Content-Type': 'application/json'\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tcreate(user) {\r\n\t\treturn fetch(`${this.baseUrl}/users`, {\r\n\t\t\tmethod: 'POST',\r\n\t\t\theaders: {\r\n\t\t\t\t'Accept': 'application/json',\r\n\t\t\t\t'Content-Type': 'application/json'\r\n\t\t\t},\r\n\t\t\tbody: JSON.stringify(user)\r\n\t\t});\r\n\t}\r\n}","import React, { Component } from 'react';\nimport './App.css';\nimport { Container } from 'react-bootstrap';\nimport { Header } from './components/Header';\nimport { TableUsers } from './components/TableUsers';\nimport { Footer } from './components/Footer';\nimport { AppBackend } from './AppBackend';\n\nclass App extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tusers: [],\n\t\t\tlimit: 5,\n\t\t\tpage: 1,\n\t\t\tsearch: ''\n\t\t};\n\n\t\tthis.backend = new AppBackend();\n\t}\n\n\tasync componentDidMount() {\n\t\tthis.updateUsers();\n\t}\n\n\tonSelectChange = async (event) => {\n\t\tconst limit = event.target.innerHTML;\n\n\t\tthis.setState({ limit }, () => {\n\t\t\tthis.updateUsers();\n\t\t});\n\t}\n\n\tgetNextPage = async () => {\n\t\tlet page = this.state.page;\n\t\tpage++;\n\n\t\tthis.setState({ page }, () => {\n\t\t\tthis.updateUsers();\n\t\t});\n\t}\n\n\tgetPreviousPage = async () => {\n\t\tlet page = this.state.page;\n\n\t\tif (page > 1) {\n\t\t\tpage--\n\t\t}\n\n\t\tthis.setState({ page }, () => {\n\t\t\tthis.updateUsers();\n\t\t});\n\t}\n\n\tonSearchChange = async (event) => {\n\t\tconst search = event.target.value;\n\n\t\tthis.setState({ search }, () => {\n\t\t\tthis.updateUsers();\n\t\t});\n\t}\n\n\tupdateUsers = async () => {\n\t\tconst { limit, search, page } = this.state;\n\n\t\tconst users = await this.backend.get({\n\t\t\tsearch,\n\t\t\tlimit,\n\t\t\tpage\n\t\t});\n\n\t\tthis.setState({ users });\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<Container>\n\t\t\t\t<Header onSelectChange={this.onSelectChange}\n\t\t\t\t\tlimit={this.state.limit}\n\t\t\t\t\tonSearchChange={this.onSearchChange} />\n\t\t\t\t<TableUsers users={this.state.users} />\n\t\t\t\t<Footer getNextPage={this.getNextPage}\n\t\t\t\t\tgetPreviousPage={this.getPreviousPage}\n\t\t\t\t\tlimit={this.state.limit}\n\t\t\t\t\tpage={this.state.page} />\n\t\t\t</Container>\n\t\t);\n\t}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}